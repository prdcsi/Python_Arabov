import sqlite3
from datetime import datetime
import sys

DB_NAME = "tasks.db"

def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS tasks (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            description TEXT NOT NULL,
            created_at TEXT NOT NULL,
            is_done INTEGER NOT NULL DEFAULT 0
        )
    """)
    conn.commit()
    conn.close()

def add_task(description):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏."""
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    cursor.execute("INSERT INTO tasks (description, created_at) VALUES (?, ?)", (description, now))
    conn.commit()
    conn.close()
    print("‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞.")

def list_tasks():
    """–í—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞–¥–∞—á."""
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()
    cursor.execute("SELECT id, description, created_at, is_done FROM tasks ORDER BY id")
    tasks = cursor.fetchall()
    conn.close()

    if not tasks:
        print("üì≠ –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç.")
        return

    print("\nüìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á:")
    for task in tasks:
        status = "[x]" if task[3] else "[ ]"
        print(f"{status} {task[0]}. {task[1]} (—Å–æ–∑–¥–∞–Ω–æ: {task[2]})")
    print()

def mark_done(task_id):
    """–û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é."""
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()
    cursor.execute("UPDATE tasks SET is_done = 1 WHERE id = ?", (task_id,))
    if cursor.rowcount == 0:
        print("‚ùå –ó–∞–¥–∞—á–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    else:
        print("‚úÖ –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è.")
    conn.commit()
    conn.close()

def delete_task(task_id):
    """–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ ID."""
    conn = sqlite3.connect(DB_NAME)
    cursor = conn.cursor()
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    if cursor.rowcount == 0:
        print("‚ùå –ó–∞–¥–∞—á–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    else:
        print("üóëÔ∏è –ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞.")
    conn.commit()
    conn.close()

def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É."""
    print("""
üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
  add "—Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏"   ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
  list                 ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏
  done <id>            ‚Äî –æ—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é
  delete <id>          ‚Äî —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É
  help                 ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  exit                 ‚Äî –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    """)

def main():
    init_db()
    print("üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á!")
    show_help()

    while True:
        try:
            user_input = input(">>> ").strip()
            if not user_input:
                continue

            parts = user_input.split(maxsplit=1)
            command = parts[0].lower()

            if command == "exit":
                print("üëã –î–æ –≤—Å—Ç—Ä–µ—á–∏!")
                break
            elif command == "help":
                show_help()
            elif command == "list":
                list_tasks()
            elif command == "add":
                if len(parts) < 2:
                    print("‚ùó –£–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏: add \"–≤–∞—à–∞ –∑–∞–¥–∞—á–∞\"")
                else:
                    add_task(parts[1].strip('"'))
            elif command == "done":
                if len(parts) < 2 or not parts[1].isdigit():
                    print("‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∑–∞–¥–∞—á–∏: done 1")
                else:
                    mark_done(int(parts[1]))
            elif command == "delete":
                if len(parts) < 2 or not parts[1].isdigit():
                    print("‚ùó –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∑–∞–¥–∞—á–∏: delete 1")
                else:
                    delete_task(int(parts[1]))
            else:
                print("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ 'help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.")
        except KeyboardInterrupt:
            print("\nüëã –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥.")
            sys.exit(0)
        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()